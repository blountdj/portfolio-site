import { CONFIG_PROD as e } from "https://cdn.jsdelivr.net/gh/blountdj/portfolio-site@v22/dist/js/config.min.js"; let CONFIG = e, { hamburgerInit: t } = await import(`${CONFIG.path}${CONFIG.jsFolder}hamburger${CONFIG.jsPostFix}.js`), { menuInit: o } = await import(`${CONFIG.path}${CONFIG.jsFolder}menu${CONFIG.jsPostFix}.js`), { portfolioInit: s, portfolioAnimate: n } = await import(`${CONFIG.path}${CONFIG.jsFolder}portfolio${CONFIG.jsPostFix}.js`), { homeInit: a, homeAnimate: r } = await import(`${CONFIG.path}${CONFIG.jsFolder}home${CONFIG.jsPostFix}.js`), { projectPageAnimate: i, projectPageInit: c } = await import(`${CONFIG.path}${CONFIG.jsFolder}project-page${CONFIG.jsPostFix}.js`), { aboutInit: l, aboutAnimations: F } = await import(`${CONFIG.path}${CONFIG.jsFolder}about${CONFIG.jsPostFix}.js`), { contactInit: p, contactAnimations: m } = await import(`${CONFIG.path}${CONFIG.jsFolder}contact${CONFIG.jsPostFix}.js`), { waveEffectInit: C } = await import(`${CONFIG.path}${CONFIG.jsFolder}wave-effect${CONFIG.jsPostFix}.js`), { addFilesCssToBody: u, removeCssFilesFromBody: I } = await import(`${CONFIG.path}${CONFIG.jsFolder}utilities${CONFIG.jsPostFix}.js`), { elemFadeOut: O, initGridTransitionAnimation: j, showGridTransitionAnimation: G, hideGridTransitionAnimation: N } = await import(`${CONFIG.path}${CONFIG.jsFolder}commonAnimations${CONFIG.jsPostFix}.js`), homeCssFileUrl = `${CONFIG.cssPath}${CONFIG.cssFolder}css/home${CONFIG.cssPostFix}.css`, portfolioCssFileUrl = `${CONFIG.cssPath}${CONFIG.cssFolder}css/portfolio${CONFIG.cssPostFix}.css`, projectsCssFileUrl = `${CONFIG.cssPath}${CONFIG.cssFolder}css/project-page${CONFIG.cssPostFix}.css`, aboutCssFileUrl = `${CONFIG.cssPath}${CONFIG.cssFolder}css/about${CONFIG.cssPostFix}.css`, contactCssFileUrl = `${CONFIG.cssPath}${CONFIG.cssFolder}css/contact${CONFIG.cssPostFix}.css`, waveEffectJsFileUrl = `${CONFIG.cssPath}${CONFIG.jsURLFolder}wave-effect${CONFIG.jsPostFix}.js`, waveEffectMinJsFileUrl = `${CONFIG.cssPath}${CONFIG.jsURLFolder}dat.gui.min.js`, animationFadeInEnter = e => { let t = e.querySelector(".main-wrapper"); return new Promise(e => { gsap.from(t, { duration: 1.5, opacity: 0, ease: "power4.out", onComplete() { e() } }) }) }, projectPages = ["audiophile", "arch", "designo"]; function fallElements(e, t, o) { let s = e.length > 5 ? -1 : 1, n = window.innerHeight / s; gsap.to(e, { y: n + 200, rotation: gsap.utils.random(-180, 180, 5), opacity: 0, duration: gsap.utils.random(.8, 1.6, .1), ease: "power3.in", delay: t, stagger: { amount: o, from: "random", ease: "power1.inOut" }, transformOrigin: "center center", x: gsap.utils.random(-100, 100, 5) }) } barba.hooks.beforeLeave(e => { document.body.style.pointerEvents = "none", document.body.style.cursor = "wait" }), barba.hooks.beforeEnter(e => { let n = e.next.namespace; C(e.next.container), "home" === n ? a(e.next.container) : "portfolio" === n ? s(e.next.container) : projectPages.includes(n) ? c(e.next.container) : "contact" === n ? p(e.next.container) : "about" === n && l(e.next.container), t(e.next.container), o(e.next.container) }), barba.hooks.once(async e => { "home" === e.next.namespace ? r(e.next.container, "once") : "portfolio" === e.next.namespace ? n(e.next.container) : projectPages.includes(e.next.namespace) ? i(e.next.container) : "about" === e.next.namespace ? F(e.next.container) : "contact" === e.next.namespace && m(e.next.container) }), barba.hooks.afterEnter(e => { let t = e.current.namespace, o = e.next.namespace; "home" === o ? u([homeCssFileUrl]) : I([homeCssFileUrl]), "portfolio" === o ? u([portfolioCssFileUrl]) : I([portfolioCssFileUrl]), "about" === o ? u([aboutCssFileUrl]) : I([aboutCssFileUrl]), "contact" === o ? u([contactCssFileUrl]) : I([contactCssFileUrl]), projectPages.includes(o) && !projectPages.includes(t) ? u([projectsCssFileUrl]) : projectPages.includes(t) && !projectPages.includes(o) && I([projectsCssFileUrl]), "home" === o ? document.body.style.cursor = "none" : document.body.style.cursor = "auto", setTimeout(() => { document.body.style.pointerEvents = "auto" }, 3e3) }); let animationType; barba.init({ debug: CONFIG.barbaDebug, sync: !1, views: [], transitions: [{ name: "page-fade-transition", before({ trigger: e }) { animationType = e.dataset?.animation || "normal" }, once() { }, async leave(e) { let t = e.current.container.querySelector(".main-section"); return (O(t), "normal" === animationType) ? new Promise(e => { j(), G(), N(), setTimeout(() => { e() }, 2e3) }) : "menu" === animationType ? new Promise(t => { let o = e.current.container.querySelectorAll(".menu-link-p > span"), s = e.current.container.querySelectorAll(".menu-img"), n = e.current.container.querySelectorAll(".menu-item"), a = e.current.container.querySelector(".main-section"); gsap.set(a, { opacity: 0 }), fallElements(o, 0, 1.5), fallElements(s, .5, 1.5), fallElements(n, 1.8, .5), setTimeout(() => { t() }, 4e3) }) : void 0 }, async enter(e) { let t = e.next.namespace; "home" === t ? r(e.next.container, "enter") : "portfolio" === t ? n(e.next.container) : projectPages.includes(t) ? i(e.next.container) : "about" === t ? F(e.next.container) : "contact" === t ? m(e.next.container) : animationFadeInEnter(e.next.container) } },] });