import { CONFIG as e } from "https://cdn.jsdelivr.net/gh/blountdj/portfolio-site@v13/min/js/config.min.js"; let { hamburgerInit: t } = await import(`${e.path}${e.jsFolder}hamburger${e.jsPostFix}.js`), { menuInit: o } = await import(`${e.path}${e.jsFolder}menu${e.jsPostFix}.js`), { portfolioInit: n, portfolioAnimate: s } = await import(`${e.path}${e.jsFolder}portfolio${e.jsPostFix}.js`), { homeInit: a, homeAnimate: r } = await import(`${e.path}${e.jsFolder}home${e.jsPostFix}.js`), { projectPageAnimate: i, projectPageInit: c } = await import(`${e.path}${e.jsFolder}project-page${e.jsPostFix}.js`), { aboutInit: l, aboutAnimations: p } = await import(`${e.path}${e.jsFolder}about${e.jsPostFix}.js`), { contactInit: m, contactAnimations: u } = await import(`${e.path}${e.jsFolder}contact${e.jsPostFix}.js`), { addFilesCssToBody: F, removeCssFilesFromBody: j } = await import(`${e.path}${e.jsFolder}utilities${e.jsPostFix}.js`), { elemFadeOut: d, initGridTransitionAnimation: x, showGridTransitionAnimation: h, hideGridTransitionAnimation: y } = await import(`${e.path}${e.jsFolder}commonAnimations${e.jsPostFix}.js`), homeCssFileUrl = `${e.cssPath}${e.cssFolder}css/home${e.cssPostFix}.css`, portfolioCssFileUrl = `${e.cssPath}${e.cssFolder}css/portfolio${e.cssPostFix}.css`, projectsCssFileUrl = `${e.cssPath}${e.cssFolder}css/project-page.min${e.cssPostFix}.css`, aboutCssFileUrl = `${e.cssPath}${e.cssFolder}css/about.min${e.cssPostFix}.css`, contactCssFileUrl = `${e.cssPath}${e.cssFolder}css/contact.min${e.cssPostFix}.css`, animationFadeInEnter = e => { let t = e.querySelector(".main-wrapper"); return new Promise(e => { gsap.from(t, { duration: 1.5, opacity: 0, ease: "power4.out", onComplete() { e() } }) }) }, projectPages = ["audiophile", "arch", "designo"]; function fallElements(e, t, o) { let n = e.length > 5 ? -1 : 1, s = window.innerHeight / n; gsap.to(e, { y: s + 200, rotation: gsap.utils.random(-180, 180, 5), opacity: 0, duration: gsap.utils.random(.8, 1.6, .1), ease: "power3.in", delay: t, stagger: { amount: o, from: "random", ease: "power1.inOut" }, transformOrigin: "center center", x: gsap.utils.random(-100, 100, 5) }) } barba.hooks.beforeLeave(e => { document.body.style.pointerEvents = "none", document.body.style.cursor = "wait" }), barba.hooks.beforeEnter(e => { let s = e.next.namespace; "home" === s ? a(e.next.container) : "portfolio" === s ? n(e.next.container) : projectPages.includes(s) ? c(e.next.container) : "contact" === s ? m(e.next.container) : "about" === s && l(e.next.container), t(e.next.container), o(e.next.container) }), barba.hooks.once(async e => { "home" === e.next.namespace ? r(e.next.container, "once") : "portfolio" === e.next.namespace ? s(e.next.container) : projectPages.includes(e.next.namespace) ? i(e.next.container) : "about" === e.next.namespace ? p(e.next.container) : "contact" === e.next.namespace && u(e.next.container) }), barba.hooks.afterEnter(e => { let t = e.current.namespace, o = e.next.namespace; "home" === o ? F([homeCssFileUrl]) : j([homeCssFileUrl]), "portfolio" === o ? F([portfolioCssFileUrl]) : j([portfolioCssFileUrl]), "about" === o ? F([aboutCssFileUrl]) : j([aboutCssFileUrl]), "contact" === o ? F([contactCssFileUrl]) : j([contactCssFileUrl]), projectPages.includes(o) && !projectPages.includes(t) ? F([projectsCssFileUrl]) : projectPages.includes(t) && !projectPages.includes(o) && j([projectsCssFileUrl]), "home" === o ? document.body.style.cursor = "none" : document.body.style.cursor = "auto", setTimeout(() => { document.body.style.pointerEvents = "auto" }, 3e3) }); let animationType; barba.init({ debug: e.barbaDebug, sync: !1, views: [], transitions: [{ name: "page-fade-transition", before({ trigger: e }) { animationType = e.dataset?.animation || "normal" }, once() { }, async leave(e) { let t = e.current.container.querySelector(".main-section"); return (d(t), "normal" === animationType) ? new Promise(e => { x(), h(), y(), setTimeout(() => { e() }, 2e3) }) : "menu" === animationType ? new Promise(t => { let o = e.current.container.querySelectorAll(".menu-link-p > span"), n = e.current.container.querySelectorAll(".menu-img"), s = e.current.container.querySelectorAll(".menu-item"), a = e.current.container.querySelector(".main-section"); gsap.set(a, { opacity: 0 }), fallElements(o, 0, 1.5), fallElements(n, .5, 1.5), fallElements(s, 1.8, .5), setTimeout(() => { t() }, 4e3) }) : void 0 }, async enter(e) { let t = e.next.namespace; "home" === t ? r(e.next.container, "enter") : "portfolio" === t ? s(e.next.container) : projectPages.includes(t) ? i(e.next.container) : "about" === t ? p(e.next.container) : "contact" === t ? u(e.next.container) : animationFadeInEnter(e.next.container) } },] });