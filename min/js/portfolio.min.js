import { CONFIG as r } from "https://cdn.jsdelivr.net/gh/blountdj/portfolio-site@v3/min/js/config.min.js"; let { h1LoadInit: o, h1LoadEffect: t, addDarrenH2Animations: e, yPercentOpacityReturn: i, h1ShineEffect: a, elemScaleTo1Center: n, imageStationaryAnimation: l, moveRightFiveOpacityOne: d, moveLeftFiveOpacityOne: p, elemScaleUp: s } = await import(`${r.path}${r.jsPath}commonAnimations${r.min}.js`), current = 0, directionForward = !0, portfolio = { items: null, portfolioTextWrapper: null, darrenH2: null, firstImage: null, prevArrow: null, nextArrow: null, hamburger: null }; export function portfolioInit(r) { o(r), portfolio.items = r.querySelectorAll(".card-slider .items .portfolio-item"), portfolio.portfolioTextWrapper = r.querySelector(".marquee-part"), portfolio.darrenH2 = r.querySelector(".h2-wrapper"), portfolio.firstImage = r.querySelector(".portfolio-item"), portfolio.prevArrow = r.querySelector(".prev"), portfolio.nextArrow = r.querySelector(".next"), portfolio.hamburger = r.querySelector(".hamburger"), portfolio.items.forEach((r, o) => { o !== current && gsap.set(r, { translateX: "100vw", opacity: 0, rotate: 40 }) }), gsap.set(portfolio.items[current], { translateX: 0, opacity: 1 }), gsap.set(portfolio.portfolioTextWrapper, { scaleX: 0 }), gsap.set(portfolio.darrenH2, { yPercent: -105, opacity: 0 }), gsap.set([portfolio.firstImage, portfolio.hamburger], { opacity: 0, scale: 0 }); let t = window.innerWidth, e = "47%"; t < 768 && (e = "105%"), gsap.set(portfolio.prevArrow, { left: e }), gsap.set(portfolio.nextArrow, { right: e }) } let arrowsEnter = () => { let r = window.innerWidth; return r > 768 ? (d(portfolio.nextArrow), p(portfolio.prevArrow)) : (gsap.to(portfolio.nextArrow, { right: "35%", duration: 1.25, ease: "back.inOut(1.7)" }), gsap.to(portfolio.prevArrow, { left: "35%", duration: 1.25, ease: "back.inOut(1.7)" })) }; export function portfolioAnimate(r) { let o = r.querySelectorAll(".page-h1 > .word > .char-wrapper > .char"), d = r.querySelectorAll(".item-card"), p, c; c = arrowsEnter(), gsap.timeline().add(() => p, .25).add(() => c, .25).add(() => s(portfolio.firstImage, 1, "back.out(1.7)"), .8).add(() => n(portfolio.portfolioTextWrapper), 1).add(() => t(r), 1.4).add(() => i(portfolio.darrenH2), 2.5).add(() => s(portfolio.hamburger, 1), 2.5).add(() => e(portfolio.darrenH2), 3).add(() => arrowAnimations(r), 3).add(() => l(d), 3).add(() => imageHoverAnimation(r), 3).add(() => portfolio.nextArrow.addEventListener("click", () => next(portfolio.items)), 3).add(() => portfolio.prevArrow.addEventListener("click", () => prev(portfolio.items)), 3).add(() => setInterval(() => a(o), 1e4), 3) } let animate = { in(r) { gsap.set(r, { translateX: directionForward ? "100vw" : "-100vw", rotate: directionForward ? 40 : -40 }), gsap.to(r, { opacity: 1, translateX: "0vw", rotate: 0, duration: 1, ease: "power4.inOut" }) }, out(r) { gsap.to(r, { opacity: 0, translateX: directionForward ? "-100vw" : "100vw", rotate: directionForward ? -40 : 40, duration: 1, ease: "power4.inOut" }) } }; function updateClasses(r) { r.forEach((r, o) => { o == current ? r.classList.add("is-active") : r.classList.remove("is-active") }) } function next(r) { directionForward || (directionForward = !directionForward), animate.out(r[current]), current = (current + 1) % r.length, setTimeout(function () { animate.in(r[current]) }, 500), updateClasses(r) } function prev(r) { directionForward && (directionForward = !directionForward), animate.out(r[current]), current = (current - 1 + r.length) % r.length, setTimeout(function () { animate.in(r[current]) }, 500), updateClasses(r) } let arrowAnimations = r => { gsap.to(".svg-arrow", { x: 10, y: 10, duration: 1.5, yoyo: !0, repeat: -1, ease: "elastic.out(1, 0.3)" }) }, imageHoverAnimation = r => { let o = r.querySelectorAll(".item-card"); o.forEach(r => { r.addEventListener("mouseenter", () => { gsap.to(r, { scale: 1.05, border: "3px solid var(--lighter-green)", duration: .3, ease: "power1.inOut" }) }), r.addEventListener("mouseleave", () => { gsap.to(r, { scale: 1, border: "0px solid var(--lighter-green)", duration: .3, ease: "power1.inOut" }) }) }) };