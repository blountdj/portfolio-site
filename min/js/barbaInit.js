import { CONFIG as e } from "https://cdn.jsdelivr.net/gh/blountdj/portfolio-site@v2/min/js/config.min.js"; let { hamburgerInit: t } = await import(`${e.path}${e.jsPath}hamburger${e.min}.js`), { menuInit: n } = await import(`${e.path}${e.jsPath}menu${e.min}.js`), { portfolioInit: o, portfolioAnimate: a } = await import(`${e.path}${e.jsPath}portfolio${e.min}.js`), { homeInit: i, homeAnimate: r } = await import(`${e.path}${e.jsPath}home${e.min}.js`), { projectPageAnimate: s, projectPageInit: c } = await import(`${e.path}${e.jsPath}project-page${e.min}.js`), { aboutInit: l, aboutAnimations: m } = await import(`${e.path}${e.jsPath}about${e.min}.js`), { contactInit: p, contactAnimations: u } = await import(`${e.path}${e.jsPath}contact${e.min}.js`), { addFilesCssToBody: h, removeCssFilesFromBody: d } = await import(`${e.path}${e.jsPath}utilities${e.min}.js`), { elemFadeOut: j, initGridTransitionAnimation: f, showGridTransitionAnimation: y, hideGridTransitionAnimation: b } = await import(`${e.path}${e.jsPath}commonAnimations${e.min}.js`), homeCssFileUrl = "https://cdn.jsdelivr.net/gh/blountdj/portfolio-site@v2/min/css/home.min.css", portfolioCssFileUrl = "https://cdn.jsdelivr.net/gh/blountdj/portfolio-site@v2/min/css/portfolio.min.css", projectsCssFileUrl = "https://cdn.jsdelivr.net/gh/blountdj/portfolio-site@v2/min/css/project.min-page.css", aboutCssFileUrl = "https://cdn.jsdelivr.net/gh/blountdj/portfolio-site@v2/min/css/about.min.css", contactCssFileUrl = "https://cdn.jsdelivr.net/gh/blountdj/portfolio-site@v2/min/css/contact.min.css", animationFadeInEnter = e => { let t = e.querySelector(".main-wrapper"); return new Promise(e => { gsap.from(t, { duration: 1.5, opacity: 0, ease: "power4.out", onComplete() { e() } }) }) }, projectPages = ["audiophile", "arch", "designo"]; function fallElements(e, t, n) { let o = e.length > 5 ? -1 : 1, a = window.innerHeight / o; gsap.to(e, { y: a + 200, rotation: gsap.utils.random(-180, 180, 5), opacity: 0, duration: gsap.utils.random(.8, 1.6, .1), ease: "power3.in", delay: t, stagger: { amount: n, from: "random", ease: "power1.inOut" }, transformOrigin: "center center", x: gsap.utils.random(-100, 100, 5) }) } barba.hooks.beforeLeave(e => { document.body.style.pointerEvents = "none", document.body.style.cursor = "wait" }), barba.hooks.beforeEnter(e => { let a = e.next.namespace; "home" === a ? i(e.next.container) : "portfolio" === a ? o(e.next.container) : projectPages.includes(a) ? c(e.next.container) : "contact" === a ? p(e.next.container) : "about" === a && l(e.next.container), t(e.next.container), n(e.next.container) }), barba.hooks.once(async e => { "home" === e.next.namespace ? r(e.next.container, "once") : "portfolio" === e.next.namespace ? a(e.next.container) : projectPages.includes(e.next.namespace) ? s(e.next.container) : "about" === e.next.namespace ? m(e.next.container) : "contact" === e.next.namespace && u(e.next.container) }), barba.hooks.afterEnter(e => { let t = e.current.namespace, n = e.next.namespace; "home" === n ? h([homeCssFileUrl]) : d([homeCssFileUrl]), "portfolio" === n ? h([portfolioCssFileUrl]) : d([portfolioCssFileUrl]), "about" === n ? h([aboutCssFileUrl]) : d([aboutCssFileUrl]), "contact" === n ? h([contactCssFileUrl]) : d([contactCssFileUrl]), projectPages.includes(n) && !projectPages.includes(t) ? h([projectsCssFileUrl]) : projectPages.includes(t) && !projectPages.includes(n) && d([projectsCssFileUrl]), "home" === n ? document.body.style.cursor = "none" : document.body.style.cursor = "auto", setTimeout(() => { document.body.style.pointerEvents = "auto" }, 3e3) }); let animationType; barba.init({ debug: e.barbaDebug, sync: !1, views: [], transitions: [{ name: "page-fade-transition", before({ trigger: e }) { animationType = e.dataset?.animation || "normal" }, once() { }, async leave(e) { let t = e.current.container.querySelector(".main-section"); return (j(t), "normal" === animationType) ? new Promise(e => { f(), y(), b(), setTimeout(() => { e() }, 2e3) }) : "menu" === animationType ? new Promise(t => { let n = e.current.container.querySelectorAll(".menu-link-p > span"), o = e.current.container.querySelectorAll(".menu-img"), a = e.current.container.querySelectorAll(".menu-item"), i = e.current.container.querySelector(".main-section"); gsap.set(i, { opacity: 0 }), fallElements(n, 0, 1.5), fallElements(o, .5, 1.5), fallElements(a, 1.8, .5), setTimeout(() => { t() }, 4e3) }) : void 0 }, async enter(e) { let t = e.next.namespace; "home" === t ? r(e.next.container, "enter") : "portfolio" === t ? a(e.next.container) : projectPages.includes(t) ? s(e.next.container) : "about" === t ? m(e.next.container) : "contact" === t ? u(e.next.container) : animationFadeInEnter(e.next.container) } },] });